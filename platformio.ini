[platformio]
libdeps_dir = /tmp/libdeps
extra_configs =
  lib/OGM-Common/platformio.base.ini
  lib/OGM-Common/platformio.rp2040.ini


[RP2040]
build_flags =
  ${BASE.build_flags}
  ${FLASH_RP2040.build_flags}
  ${RP2040_custom.build_flags}
  -D PIO_FRAMEWORK_ARDUINO_ENABLE_RTTI




;
; customer build_flags
;

; this config block is for specifing options that are valid for all RP2040-based builds
[RP2040_custom]
build_flags = 
  -D MASK_VERSION=0x091A
  -D SERIAL_DEBUG=Serial
  -D NCN5120
  -D ParamLOG_Watchdog=true
debug_build_flags =

; this config block is for specifing options that are valid for all RP2040-based develop/debug builds
[RP2040_custom_develop]
build_flags = 
  -O0
  -ggdb3
  ;-D OPENKNX_HEARTBEAT
   -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; "-D OPENKNX_TRACE1=Common.*"
  ; "-D OPENKNX_TRACE2=Flash.*"
  -Os
debug_build_flags =

; this config block is for specifing options that are valid for all RP2040-based release builds
[RP2040_custom_releases]
build_flags = 
  -Os
debug_build_flags =
  -D OPENKNX_WATCHDOG



[env:develop_PIPICO]
extends = RP2040_develop, RP2040_2MB
build_flags =
   ${RP2040_develop.build_flags}
  -D BOARD_PIPICO
  -D KNX_ETH_GEN

[env:develop_PIPICO_USB]
extends = UPLOAD_USB_RP2040, env:develop_PIPICO

[env:develop_PIPICO_JLINK]
extends = UPLOAD_JLINK, env:develop_PIPICO


[env:develop_REG1_ETH]
extends = RP2040_develop, RP2040_16MB
build_flags =
   ${RP2040_develop.build_flags}
  -D BOARD_REG1_ETH
  -D KNX_ETH_GEN

[env:develop_REG1_ETH_USB]
extends = UPLOAD_USB_RP2040, env:develop_REG1_ETH

[env:develop_REG1_ETH_JLINK]
extends = UPLOAD_JLINK, env:develop_REG1_ETH


[env:develop_W5500_EVB_PICO]
extends = RP2040_develop, RP2040_2MB
build_flags =
   ${RP2040_develop.build_flags}
  -D BOARD_W5500_EVB_PICO
  -D KNX_ETH_GEN

[env:develop_W5500_EVB_PICO_USB]
extends = UPLOAD_USB_RP2040, env:develop_W5500_EVB_PICO

[env:develop_W5500_EVB_PICO_JLINK]
extends = UPLOAD_JLINK, env:develop_W5500_EVB_PICO

[env:develop_PIPICOW]
extends = RP2040_develop, RP2040_2MB
board = rpipicow
build_flags =
   ${RP2040_develop.build_flags}
  -D BOARD_PIPICOW
  -D KNX_WIFI

[env:develop_PIPICOW_USB]
extends = UPLOAD_USB_RP2040, env:develop_PIPICOW

[env:develop_PIPICOW_JLINK]
extends = UPLOAD_JLINK, env:develop_PIPICOW

; Releases
[env:release_REG1_ETH]
extends = RP2040_releases, RP2040_16MB
build_flags =
   ${RP2040_releases.build_flags}
  -D BOARD_REG1_ETH
  -D KNX_ETH_GEN
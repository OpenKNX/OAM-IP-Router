;
; global custom
;
[custom]
lib_deps =
  ${Network_Generic.lib_deps}
build_flags =
  -D MASK_VERSION=0x091A
  -D KNX_TUNNELING=16
  -D SERIAL_DEBUG=Serial
  -D KNX_ACTIVITYCALLBACK
  -D OPENKNX_NETWORK_USEIPPROP
  -D KNX_SERVICE_FAMILY=0x02
  -D USE_KNX_DMA_UART=0
  -D USE_KNX_DMA_IRQ=0
  -D MAX_RX_QUEUE_BYTES=2048
  -D MAX_TX_QUEUE=200

[develop]
extends = RP2040_develop, custom
build_flags =
  ${RP2040_develop.build_flags}
  ${custom.build_flags}
  ;-D OPENKNX_HEARTBEAT
   -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10 ; will print a info when a loop took more than x ms.
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ; "-D OPENKNX_TRACE1=Common.*"
  ; "-D OPENKNX_TRACE3=DummyChannel<1>"
  ; "-D OPENKNX_TRACE4=DummyChannel<[3-5]>"
  ;-D KNX_LOG_COUPLER
  ;-D DEBUG_TP_FRAMES
  ;-D KNX_LOG_TUNNELING
  -D OPENKNX_RUNTIME_STAT
  -D OPENKNX_RUNTIME_STAT_BUCKETN=10
  -D OPENKNX_LOOPTIME_WARNING=15
  "-D OPENKNX_RUNTIME_STAT_BUCKETS=5000, 10000, 15000, 20000, 30000, 40000, 50000, 100000, 200000"

; this config block is for specifing options that are valid for all release builds
[releases]
extends = RP2040_releases, custom
build_flags =
  ${RP2040_releases.build_flags}
  ${custom.build_flags}
  -D OPENKNX_LOOPTIME_WARNING=50


; ------ PiPico ------
[env:develop_PIPICO]
extends = develop, RP2040_2MB, RP2040_EXCHANGE_2MB, RP2040_UPLOAD_USB
build_flags =
   ${develop.build_flags}
   ${RP2040_EXCHANGE_2MB.build_flags}
  -D BOARD_PIPICO
  -D KNX_IP_W5500

[env:develop_PIPICO_JLINK]
extends = env:develop_PIPICO, UPLOAD_JLINK


; ------ REG1-Eth ------
[env:develop_REG1_ETH]
extends = develop, RP2040_16MB, RP2040_EXCHANGE_16MB, RP2040_UPLOAD_USB
build_flags =
   ${develop.build_flags}
   ${RP2040_EXCHANGE_16MB.build_flags}
  -D BOARD_REG1_ETH
  -D KNX_IP_W5500

[env:develop_REG1_ETH_JLINK]
extends = env:develop_REG1_ETH, UPLOAD_JLINK


; ------ REG1-Eth V1------
[env:develop_REG1_ETH_V1]
extends = develop, RP2040_16MB, RP2040_EXCHANGE_16MB, RP2040_UPLOAD_USB
build_flags =
   ${develop.build_flags}
   ${RP2040_EXCHANGE_16MB.build_flags}
  -D BOARD_REG1_ETH_V1
  -D KNX_IP_GENERIC

[env:develop_REG1_ETH_V1_JLINK]
extends = env:develop_REG1_ETH_V1, UPLOAD_JLINK


; ------ W5500-EVB-Pico ------
[env:develop_W5500_EVB_PICO]
extends = develop, RP2040_2MB, RP2040_EXCHANGE_2MB, RP2040_UPLOAD_USB
build_flags =
   ${develop.build_flags}
   ${RP2040_EXCHANGE_2MB.build_flags}
  -D BOARD_W5500_EVB_PICO
  -D KNX_IP_W5500

[env:develop_W5500_EVB_PICO_JLINK]
extends = env:develop_W5500_EVB_PICO, UPLOAD_JLINK


; ------ PiPicoW ------
[env:develop_PIPICOW]
extends = develop, RP2040_2MB, RP2040_EXCHANGE_2MB, RP2040_UPLOAD_USB
board = rpipicow
build_flags =
   ${develop.build_flags}
   ${RP2040_EXCHANGE_2MB.build_flags}
  -D BOARD_PIPICOW
  -D KNX_IP_WIFI

[env:develop_PIPICOW_JLINK]
extends = , env:develop_PIPICOW, UPLOAD_JLINK



; ; Releases
[env:release_REG1_ETH_V1]
extends = releases, RP2040_16MB, RP2040_EXCHANGE_16MB
build_flags =
   ${releases.build_flags}
   ${RP2040_EXCHANGE_16MB.build_flags}
  -D BOARD_REG1_ETH_V1
  -D KNX_IP_W5500